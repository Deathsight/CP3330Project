{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\StudentAdmin\\\\Documents\\\\GitHub\\\\CP3330Project\\\\mallprojectreact\\\\src\\\\Renting\\\\TheaterRentingCreate.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport DB from \"../db.js\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Table from \"react-bootstrap/Table\";\nimport Auth from \"../auth\";\nexport default class TheaterRentingCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      renter: \"\",\n      Security: null,\n      securityCompanies: [],\n      isCreated: false,\n      theater: null,\n      StartDate: null,\n      TotalPrice: 0,\n      duration: null,\n      StartTime: null,\n      EndTime: null\n    };\n\n    this.handleStartDate = event => {\n      console.log(event.target.value);\n      this.setState({\n        StartDate: event.target.value\n      });\n    };\n\n    this.handleStartTime = event => {\n      this.setState({\n        StartTime: event.target.value\n      });\n    };\n\n    this.handleEndTime = event => {\n      this.setState({\n        EndTime: event.target.value\n      });\n    };\n\n    this.handleRent = async () => {\n      console.log(this.state.StartDate);\n\n      if (await DB.Rentings.create({\n        AssetId: this.state.SelectedIds,\n        StartDateTime: \"\".concat(this.state.StartDate, \"T\").concat(this.state.StartTime, \":00\"),\n        EndDateTime: \"\".concat(this.state.StartDate, \"T\").concat(this.state.EndTime, \":00\"),\n        TotalPrice: this.state.TotalPrice,\n        Status: \"completed\",\n        ReferalCode: null,\n        SecurityId: this.state.Security.Id\n      })) {\n        this.setState({\n          isCreated: true\n        });\n      }\n    };\n\n    this.handleTotalPrice = () => {\n      var d = this.handleDuration();\n      console.log(d);\n      console.log(this.state.theater.TheaterPM.Price);\n      console.log(this.state.EndTime);\n\n      if (this.state.StartTime != null && this.state.EndTime != null && this.state.Security != null) {\n        var price = d * this.state.theater.TheaterPM.Price; //console.log(price);\n\n        price = price + this.state.Security.Price;\n        console.log(price);\n        this.setState({\n          TotalPrice: price\n        });\n      }\n    };\n\n    this.handleDuration = () => {\n      if (this.state.StartTime != null && this.state.EndTime != null) {\n        var edt = this.state.EndTime.split(\":\");\n        var sdt = this.state.StartTime.split(\":\");\n        var Difference_In_Time = edt[0] - sdt[0];\n        return Difference_In_Time;\n      }\n    };\n\n    this.handleSecurity = sec => {\n      this.setState({\n        Security: sec\n      });\n    };\n\n    this.isAvailable = time => {\n      // search for time in all times in\n      //this.state.movie.assetBookings.Bookings;\n      const search = \"\".concat(this.state.Date, \"T\").concat(time);\n      return this.state.movie.AssetBookings.filter(assetBooking => assetBooking.Booking.StartDateTime === search).length === 0;\n    };\n  }\n\n  async componentDidMount() {\n    let assetIds = this.props.match.params.id.split(\",\");\n    assetIds = assetIds.map(item => parseInt(item));\n    const theaters = await DB.Theaters.findAll();\n    const SelectedTheaters = theaters.filter(function (item) {\n      return assetIds.indexOf(item.AssetId) !== -1;\n    });\n    const renter = await DB.Renters.findByName(Auth.username());\n    const securityCompanies = await DB.Securities.findAll();\n    console.log(renter); //console.log(securityCompanies);\n\n    this.setState({\n      SelectedIds: assetIds\n    });\n    this.setState({\n      SelectedTheaters\n    });\n    this.setState({\n      securityCompanies\n    });\n    this.setState({\n      renter\n    });\n  }\n\n  render() {\n    return this.state.isCreated ? React.createElement(Redirect, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Please Fill the Form Below\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Renter: \", this.state.renter.Email), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Show date: \"), React.createElement(\"input\", {\n      type: \"date\",\n      onChange: this.handleStartDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Start Time: \"), React.createElement(\"input\", {\n      type: \"Time\",\n      onChange: this.handleStartTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"End Time: \"), React.createElement(\"input\", {\n      type: \"Time\",\n      onChange: this.handleEndTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), \"Choose a Security Option\", this.state.securityCompanies.map((company, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      inline: true,\n      type: \"radio\",\n      name: \"securityCompany\",\n      onChange: () => this.handleSecurity(company),\n      value: company,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, company.CompanyName, \" : \", company.Level, \" \"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Total price: \", this.state.TotalPrice), React.createElement(Button, {\n      onClick: this.handleTotalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Calculate Price\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleRent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Create\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/StudentAdmin/Documents/GitHub/CP3330Project/mallprojectreact/src/Renting/TheaterRentingCreate.js"],"names":["React","DB","Button","Form","Link","Redirect","Table","Auth","TheaterRentingCreate","Component","state","renter","Security","securityCompanies","isCreated","theater","StartDate","TotalPrice","duration","StartTime","EndTime","handleStartDate","event","console","log","target","value","setState","handleStartTime","handleEndTime","handleRent","Rentings","create","AssetId","SelectedIds","StartDateTime","EndDateTime","Status","ReferalCode","SecurityId","Id","handleTotalPrice","d","handleDuration","TheaterPM","Price","price","edt","split","sdt","Difference_In_Time","handleSecurity","sec","isAvailable","time","search","Date","movie","AssetBookings","filter","assetBooking","Booking","length","componentDidMount","assetIds","props","match","params","id","map","item","parseInt","theaters","Theaters","findAll","SelectedTheaters","indexOf","Renters","findByName","username","Securities","render","Email","company","index","CompanyName","Level"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport DB from \"../db.js\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Auth from \"../auth\";\r\n\r\nexport default class TheaterRentingCreate extends React.Component {\r\n  state = {\r\n    renter: \"\",\r\n    Security: null,\r\n    securityCompanies: [],\r\n    isCreated: false,\r\n    theater: null,\r\n    StartDate: null,\r\n    TotalPrice: 0,\r\n    duration: null,\r\n    StartTime: null,\r\n    EndTime:null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let assetIds = this.props.match.params.id.split(\",\")\r\n    assetIds = assetIds.map(item => parseInt(item))\r\n\r\n    const theaters = await DB.Theaters.findAll();\r\n\r\n    const SelectedTheaters = theaters.filter(function(item) {\r\n      return assetIds.indexOf(item.AssetId) !== -1;\r\n    });\r\n    \r\n    const renter = await DB.Renters.findByName(Auth.username());\r\n    const securityCompanies = await DB.Securities.findAll();\r\n    console.log(renter);\r\n    //console.log(securityCompanies);\r\n    this.setState({ SelectedIds: assetIds});\r\n    this.setState({ SelectedTheaters });\r\n    this.setState({ securityCompanies });\r\n    this.setState({ renter });\r\n  }\r\n\r\n  handleStartDate = event => {\r\n    console.log(event.target.value);\r\n    this.setState({ StartDate: event.target.value });\r\n  };\r\n  \r\n\r\n  handleStartTime = (event) => {\r\n    this.setState({ StartTime:event.target.value });\r\n  };\r\n  handleEndTime = (event) => {\r\n    this.setState({ EndTime:event.target.value });\r\n  };\r\n\r\n  handleRent = async () => {\r\n    console.log(this.state.StartDate);\r\n\r\n    if (\r\n      await DB.Rentings.create({\r\n        AssetId: this.state.SelectedIds,\r\n        StartDateTime: `${this.state.StartDate}T${this.state.StartTime}:00`,\r\n        EndDateTime: `${this.state.StartDate}T${this.state.EndTime}:00`,\r\n        TotalPrice: this.state.TotalPrice,\r\n        Status: \"completed\",\r\n        ReferalCode: null,\r\n        SecurityId: this.state.Security.Id\r\n      })\r\n    ) {\r\n      this.setState({ isCreated: true });\r\n    }\r\n  };\r\n\r\n  handleTotalPrice = () => {\r\n    var d = this.handleDuration();\r\n    console.log(d);\r\n    console.log(this.state.theater.TheaterPM.Price);\r\n    console.log(this.state.EndTime);\r\n    if (\r\n      this.state.StartTime != null &&\r\n      this.state.EndTime != null &&\r\n      this.state.Security != null\r\n    ) {\r\n      var price = d * this.state.theater.TheaterPM.Price;\r\n      //console.log(price);\r\n      price = price + this.state.Security.Price;\r\n      console.log(price);\r\n      this.setState({ TotalPrice: price });\r\n    }\r\n  };\r\n\r\n  handleDuration = () => {\r\n    if (this.state.StartTime != null && this.state.EndTime != null) {\r\n      var edt = this.state.EndTime.split(\":\");\r\n      var sdt = this.state.StartTime.split(\":\");\r\n      \r\n      var Difference_In_Time = edt[0] - sdt[0];\r\n      \r\n      \r\n      return Difference_In_Time;\r\n    }\r\n  };\r\n\r\n  handleSecurity = sec => {\r\n    this.setState({ Security: sec });\r\n  };\r\n\r\n  isAvailable = time => {\r\n    // search for time in all times in\r\n    //this.state.movie.assetBookings.Bookings;\r\n    const search = `${this.state.Date}T${time}`;\r\n    return (\r\n      this.state.movie.AssetBookings.filter(\r\n        assetBooking => assetBooking.Booking.StartDateTime === search\r\n      ).length === 0\r\n    );\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    return this.state.isCreated ? (\r\n      <Redirect to=\"/profile\" />\r\n    ) : (\r\n      <div>\r\n        <h2>Please Fill the Form Below</h2>\r\n        <label>Renter: {this.state.renter.Email}</label>\r\n        {/* <br />\r\n        <label>Store Name: {this.state.renter.StoreName}</label> */}\r\n        <br></br>\r\n        <label>Show date: </label>\r\n        <input type=\"date\" onChange={this.handleStartDate}></input>\r\n        <br />\r\n        <label>Start Time: </label>\r\n        <input type=\"Time\" onChange={this.handleStartTime}></input>\r\n        <br />\r\n        <label>End Time: </label>\r\n        <input type=\"Time\" onChange={this.handleEndTime}></input>\r\n        <br></br>\r\n        Choose a Security Option\r\n        {this.state.securityCompanies.map((company, index) => (\r\n          <li key={index}>\r\n            <Form.Check\r\n              inline\r\n              type=\"radio\"\r\n              name=\"securityCompany\"\r\n              onChange={() => this.handleSecurity(company)}\r\n              value={company}\r\n            ></Form.Check>\r\n            <label>\r\n              {company.CompanyName} : {company.Level}{\" \"}\r\n            </label>\r\n          </li>\r\n        ))}\r\n        <label>Total price: {this.state.TotalPrice}</label>\r\n        <Button onClick={this.handleTotalPrice}>Calculate Price</Button>\r\n        <br></br>\r\n        <Button onClick={this.handleRent}>Create</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}