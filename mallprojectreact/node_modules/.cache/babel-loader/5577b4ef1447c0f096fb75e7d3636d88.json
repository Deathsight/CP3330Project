{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\StudentAdmin\\\\Documents\\\\GitHub\\\\CP3330Project\\\\mallprojectreact\\\\src\\\\Register.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Redirect } from \"react-router-dom\";\nexport default class Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Email: \"\",\n      Password: \"\",\n      ConfirmPassword: \"\",\n      isRegistered: false\n    };\n\n    this.handleEmail = event => {\n      this.setState({\n        Email: event.target.value\n      });\n    };\n\n    this.handlePassword = event => {\n      this.setState({\n        Password: event.target.value\n      });\n    };\n\n    this.handleConfirmPassword = event => {\n      this.setState({\n        ConfirmPassword: event.target.value\n      });\n    };\n\n    this.handleRegisterDB = async () => {\n      console.log('Supposed to create', this.state.Email);\n      console.log('Supposed to create', this.state.Password);\n      console.log('Supposed to create', this.state.ConfirmPassword);\n      const response = await fetch(\"/api/Account/Register\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Email: this.state.Email,\n          Password: this.state.Password,\n          ConfirmPassword: this.state.ConfirmPassword\n        })\n      });\n\n      if (response.ok) {\n        console.log('Successfully');\n        this.setState({\n          isRegistered: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return this.state.isRegistered ? React.createElement(Redirect, {\n      to: \"/login/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      onChange: this.handleEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handlePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicConfirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      onChange: this.handleConfirmPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleRegisterDB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Register\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/StudentAdmin/Documents/GitHub/CP3330Project/mallprojectreact/src/Register.js"],"names":["React","Button","Form","Redirect","Register","Component","state","Email","Password","ConfirmPassword","isRegistered","handleEmail","event","setState","target","value","handlePassword","handleConfirmPassword","handleRegisterDB","console","log","response","fetch","method","headers","body","JSON","stringify","ok","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Register extends React.Component {\r\n    state = {\r\n        Email: \"\",\r\n        Password: \"\",\r\n        ConfirmPassword: \"\",\r\n        isRegistered: false\r\n    }\r\n\r\n    handleEmail = (event) => {\r\n        this.setState({Email: event.target.value})\r\n    }\r\n\r\n    handlePassword = (event) => {\r\n        this.setState({Password: event.target.value})\r\n    }\r\n\r\n    handleConfirmPassword = (event) => {\r\n        this.setState({ConfirmPassword: event.target.value})\r\n    }\r\n\r\n    handleRegisterDB = async () => {\r\n        console.log('Supposed to create',this.state.Email)\r\n        console.log('Supposed to create',this.state.Password)\r\n        console.log('Supposed to create',this.state.ConfirmPassword)\r\n\r\n        const response = await fetch(`/api/Account/Register`,{\r\n            method : 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                Email: this.state.Email,\r\n                Password: this.state.Password,\r\n                ConfirmPassword: this.state.ConfirmPassword,\r\n            })\r\n        })\r\n        if(response.ok){\r\n            console.log('Successfully')\r\n            this.setState({ isRegistered: true });\r\n          }\r\n    }\r\n\r\n    render(){\r\n        return this.state.isRegistered ?(\r\n            <Redirect to = \"/login/\"/>\r\n            ) : (\r\n            <div>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.handleEmail}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.handlePassword}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicConfirmPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Confirm Password\" onChange={this.handleConfirmPassword}/>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" onClick={this.handleRegisterDB}>\r\n                    Register\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}    "]},"metadata":{},"sourceType":"module"}